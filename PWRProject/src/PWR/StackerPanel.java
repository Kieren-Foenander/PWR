/*
 * /*
Programmer: Kieren Foenander S012141776
Course: Object Oriented Programming COIT11134
Assignment 1
 */
package PWR;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;

/**
 *
 * @author black
 */
public class StackerPanel extends javax.swing.JPanel {

    /**
     * Creates new form StackerPanel
     */
    public StackerPanel() {
        initComponents();

    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        stackerLabel = new JLabel();
        JLabel nameLabel = new JLabel();
        flatLabel = new JLabel();
        helixLabel = new JLabel();
        nameTextField = new JTextField();
        helixTextField = new JTextField();
        saveStackerButton = new JButton();
        flatTextField = new JTextField();

        stackerLabel.setFont(new Font("Dialog", 1, 24)); // NOI18N
        stackerLabel.setText("Add new Stacker");
        stackerLabel.setToolTipText("");

        nameLabel.setText("Name:");

        flatLabel.setText("Difficulty of flat panel stacker can complete:");
        flatLabel.setToolTipText("");

        helixLabel.setText("Difficulty of helix core stacker can complete:");

        saveStackerButton.setText("Save");
        saveStackerButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                saveStackerButtonActionPerformed(evt);
            }
        });

        flatTextField.setToolTipText("");

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(stackerLabel)
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                        .addComponent(saveStackerButton)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(nameLabel)
                                .addComponent(flatLabel)
                                .addComponent(helixLabel))
                            .addGap(22, 22, 22)
                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                .addComponent(nameTextField)
                                .addComponent(helixTextField)
                                .addComponent(flatTextField, GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)))))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(stackerLabel)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(flatLabel)
                    .addComponent(flatTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(helixLabel)
                    .addComponent(helixTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(saveStackerButton)
                .addGap(33, 33, 33))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveStackerButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_saveStackerButtonActionPerformed
        save();
        
    }//GEN-LAST:event_saveStackerButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel flatLabel;
    private JTextField flatTextField;
    private JLabel helixLabel;
    private JTextField helixTextField;
    private JTextField nameTextField;
    private JButton saveStackerButton;
    private JLabel stackerLabel;
    // End of variables declaration//GEN-END:variables

    public ArrayList<Stacker> stackerList = new ArrayList();

    
    private void save(){
        String name;
        String flatDif;
        String helixDif; // defines variables to create a stacker object
        
        name = nameTextField.getText(); // gets name from text field
        flatDif = flatTextField.getText(); // gets flat difficulty from text Field
        helixDif = helixTextField.getText(); // gets helix difficulty from text field
        
        Stacker input = new Stacker(name, flatDif, helixDif); // creates new stacker object
        
        stackerList.add(input); // adds new stacker to arrayList

    }

}
